akka {
  loglevel = "INFO"

  actor {
      serializers {
        pet-added = "it.pagopa.pdnd.uservice.resttemplate.model.persistence.serializer.PetAddedSerializer"
        pet-deleted = "it.pagopa.pdnd.uservice.resttemplate.model.persistence.serializer.PetDeletedSerializer"
      }
      serialization-identifiers {
        "it.pagopa.pdnd.uservice.resttemplate.model.persistence.serializer.PetAddedSerializer" = 100000
        "it.pagopa.pdnd.uservice.resttemplate.model.persistence.serializer.PetDeletedSerializer" = 100001
      }
      serialization-bindings {
        "it.pagopa.pdnd.uservice.resttemplate.model.persistence.PetAdded" = pet-added
        "it.pagopa.pdnd.uservice.resttemplate.model.persistence.PetDeleted" = pet-deleted
      }
    }

      persistence {
        journal.plugin =  "akka.persistence.journal.inmem"
        snapshot-store.plugin = "akka.persistence.snapshot-store.local"
        snapshot-store.local.dir = "target/snapshot"
      }
}

akka.management {
  http {
    hostname = "0.0.0.0"
  }
  health-checks {
    readiness-checks {
      ready = "it.pagopa.pdnd.uservice.resttemplate.server.impl.HealthCheck"
    }
    liveness-checks {
      live = "it.pagopa.pdnd.uservice.resttemplate.server.impl.LiveCheck"
    }
  }
}

kamon.prometheus {
  embedded-server {
    hostname = 0.0.0.0
  }
}

kamon.instrumentation.akka.http {
  server {
    propagation {
      enabled = yes
      channel = default
    }
  }

  client {
    propagation {
      enabled = yes
      channel = default
    }
  }
}

kamon.instrumentation.akka.http {
  server.metrics {
    enabled = yes
  }
}

kamon.instrumentation.akka.http {
  server {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }

  client {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }
}